{"version":3,"sources":["assets/annotation-marked-up.png","pages/Description.jsx","assets/sidebar-annotated.png","pages/SidebarDescription.jsx","App.js","reportWebVitals.js","index.js"],"names":["Description","className","src","annotationMarkedUp","alt","SidebarDescription","sidebarMarkedUp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,G,MAAA,IAA0B,kDCgD1BA,G,KA5CK,WAEhB,OACI,sBAAKC,UAAU,sBAAf,6QAII,qBAAKA,UAAU,aAAf,+CAGA,8JAIA,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKC,EAAoBC,IAAI,8EAEtC,qBAAKH,UAAU,oBAAf,SACI,+BACI,8CACY,kDADZ,wCAEI,2CAFJ,oHAEsI,8CAFtI,uCAIA,4GAC0E,+CAD1E,wEACoK,kDADpK,+FAE6D,mDAF7D,oDAEuI,qCAFvI,8GAGkC,qDAHlC,yGAGmK,mDAHnK,kDAKA,sCACQ,8CADR,qJAGA,sCACQ,kEADR,sDCpCT,G,MAAA,IAA0B,+CC+C1BI,EA3CY,WAEvB,OACI,sBAAKJ,UAAU,sBAAf,UAEI,qBAAKA,UAAU,aAAf,6CAIA,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKI,EAAiBF,IAAI,wEAEnC,qBAAKH,UAAU,oBAAf,SACI,+BACI,8CACgB,+CADhB,+GACiJ,sDADjJ,sBAEI,8CAFJ,oHAIA,sCACQ,2CADR,yMAIA,yHAC2F,8CAD3F,uHAEQ,4CAFR,mIAE0J,gDAF1J,wHAGiH,kEAHjH,sBAKA,gEACkC,2DADlC,yEAGA,sCACQ,uEADR,uJClBTM,MAZf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACI,iDACA,cAAC,EAAD,IACA,cAAC,EAAD,UCCKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c2679413.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/annotation-marked-up.ffa77fac.png\";","import React from 'react';\nimport annotationMarkedUp from '../assets/annotation-marked-up.png';\nimport './Description.css';\n\nconst Description = () => {\n\n    return(\n        <div className=\"adamite-description\">\n            Adamite is a web-based annotation tool that allows developers to comment on, question, and keep track of learning resources they find useful or confusing.\n            Annotations can be thought of as meta-level \"content\" that is \"anchored\" to a specific piece of text.\n\n            <div className=\"sub-header\">\n                What is an annotation in Adamite?\n            </div>\n            <div>\n                This is an annotation as it appears in Adamite's sidebar, with numerical markings referring to each part of the annotation. \n            </div>\n\n            <div className=\"breakdown-container\">\n                <div className=\"image-container\">\n                    <img src={annotationMarkedUp} alt='showing annotation with numbers referencing each part of the annotation' />\n                </div>\n                <div className=\"image-description\">\n                    <ol>\n                        <li>\n                        Name of the <b>annotation author</b> (\"documentation\" in this case), \n                        the <b>group name</b> that the annotation has been published to (with \"Private\" being a default group that is just yourself), and the <b>date and time</b> the annotation was published at.\n                        </li>\n                        <li>\n                        All of the operations you can perform on an annotation - the arrow is the <b>\"reply\" button</b> which allows you to reply to an annotation, the \"pin\" allows you to <b>pin an annotation</b> so that it's always available\n                        in a pinned annotation list, the anchor button allows you to <b>add another anchor</b> to an annotation, the pencil icon allows you to <b>edit</b> an annotation (only available to the original author of an annotation),\n                        and the trash can icon is used to <b>delete an annotation</b> (only available to the original author of an annotation). The icon in the top right corner shows the <b>type of annotation</b> with this annotation being a \"normal\" type.\n                        </li>\n                        <li>\n                            The <b>original text</b>, referred to as an \"anchor\", on the webpage that has been annotated - clicking the anchor button will scroll to where that text is on the page\n                        </li>\n                        <li>\n                            The <b>user-generated annotation content</b> that is tied to that anchor point.\n                        </li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default Description;","export default __webpack_public_path__ + \"static/media/sidebar-annotated.04715132.png\";","import React from 'react';\nimport sidebarMarkedUp from '../assets/sidebar-annotated.png';\nimport './Description.css';\n\nconst SidebarDescription = () => {\n\n    return(\n        <div className=\"adamite-description\">\n\n            <div className=\"sub-header\">\n                What is the sidebar in Adamite?\n            </div>\n\n            <div className=\"breakdown-container\">\n                <div className=\"image-container\">\n                    <img src={sidebarMarkedUp} alt='showing sidebar with numbers referencing each part of the sidebar' />\n                </div>\n                <div className=\"image-description\">\n                    <ol>\n                        <li>\n                            Name of the <b>logged-in user</b> (\"documentation\" in this case) - users can log out by hovering over the user icon. Users can also create a <b>page-level annotation</b> by clicking on the \n                            <b>document icon</b>, where a page level annotation can be used for annotating information that is relevant to the whole web page.\n                        </li>\n                        <li>\n                            The <b>search bar</b> can be used to search for annotations - annotations can be searched globally, on the website, or on the page. Searched for annotations will match on anchor content, annotation content,\n                            and tags. \n                        </li>\n                        <li>\n                            Filters that will change the set of currently-viewable annotations in the sidebar. The <b>groups filter</b> sets the sidebar to show annotations that are in that group, with the default groups being public and private.\n                            The <b>time filter</b> can be used to filter out older annotations, with the default state set to show annotations that were created at any time. The <b>annotation type</b> filter\n                            sets which annotation type is currently viewable in the sidebar. The number in the bottom right corner shows <b>how many annotations are viewable</b> in the sidebar.\n                        </li>\n                        <li>\n                            The button to show the user's <b>list of pinned annotations</b>. If a user has no pinned annotatinos, this button will not appear.\n                        </li>\n                        <li>\n                            The <b>list of currently-viewable annotations</b>. By default will show all annotations authored on that page that are public, or are private and were authored by the logged-in user.\n                        </li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default SidebarDescription;","import Description  from './pages/Description';\nimport React from 'react';\nimport './App.css';\nimport SidebarDescription from './pages/SidebarDescription';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <b>Adamite Overview</b>\n          <Description />\n          <SidebarDescription />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}