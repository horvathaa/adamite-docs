{"version":3,"sources":["assets/annotation-marked-up.png","pages/Description.jsx","App.js","reportWebVitals.js","index.js"],"names":["Description","className","src","annotationMarkedUp","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,G,KAAA,IAA0B,kDCwC1BA,G,MApCK,WAIhB,OACI,sBAAKC,UAAU,sBAAf,6QAII,sBAAKA,UAAU,kBAAf,UACI,qBAAKC,IAAKC,EAAoBC,IAAI,4EAClC,sBAAKH,UAAU,oBAAf,wIAEI,+BACI,qRAIA,kkB,MCJTI,MAdf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,wCAEE,cAAC,EAAD,YCEKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df3a94a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/annotation-marked-up.ffa77fac.png\";","import React from 'react';\nimport annotationMarkedUp from '../assets/annotation-marked-up.png';\nimport './Description.css';\n\nconst Description = () => {\n\n\n\n    return(\n        <div className=\"Adamite-description\">\n            Adamite is a web-based annotation tool that allows developers to comment on, question, and keep track of learning resources they find useful or confusing.\n            Annotations can be thought of as meta-level \"content\" that is \"anchored\" to a specific piece of text.\n\n            <div className=\"image-container\">\n                <img src={annotationMarkedUp} alt='showing annotation with numbers referencing each part of the annotation' />\n                <div className=\"image-description\">\n                    This is an annotation as it appears in Adamite's sidebar, with numerical markings referring to each part of the annotation. \n                    <ol>\n                        <li>\n                        1 is the name of the annotation author (\"documentation\" in this case), \n                        the group name that the annotation has been published to, with \"private\" being a default group that is just yourself, and the date and time the annotation was published at.\n                        </li>\n                        <li>\n                        2 shows all of the operations you can make on an annotation - the arrow is the \"reply\" button which allows you to reply to an annotation, the \"pin\" allows you to pin an annotation so that it's always available\n                        in a pinned annotation list, the \"anchor\" button allows you to add another anchor to an annotation, the pencil icon allows you to edit an annotation (only available to the original author of an annotation),\n                        and the trash can icon is used to delete an annotation (only available to the original author of an annotation).\n                        </li>\n                    </ol>\n                    \n                    \n                </div>\n            </div>\n\n\n        </div>\n    );\n\n\n}\n\nexport default Description;","import Description  from './pages/Description';\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Adamite\n          <Description />\n        </p>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}